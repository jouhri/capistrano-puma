upstream puma_<%= fetch(:nginx_config_name) %> { <%
  @backends = [fetch(:puma_bind)].flatten.map do |m|
  etype, address  = /(tcp|unix|ssl):\/{1,2}(.+)/.match(m).captures
  if etype == 'unix'
    "server #{etype}:#{address} #{fetch(:nginx_socket_flags)};"
  else
    "server #{address.gsub(/0\.0\.0\.0(.+)/, "127.0.0.1\\1")} #{fetch(:nginx_http_flags)};"
  end
end
%><% @backends.each do |server| %>
  <%= server %><% end %>
}
<% if fetch(:nginx_use_ssl) -%>
server {
  listen   80;
  server_name  <%=dns_name%> *.<%=dns_name%>;

  access_log /var/www/<%=environment%>/<%=application%>/shared/log/nginx_access.log;
  error_log /var/www/<%=environment%>/<%=application%>/shared/log/nginx_error.log;

  root /var/www/<%=environment%>/<%=application%>/current/public;
  index  index.html;

  location ~ /.well-known/acme-challenge {
    allow all;
  }

  location ~ (\.php|.aspx|.asp|myadmin|webdav|joomla|apple-touch-icon) {
      return 404;
  }

  location ~* \.(js|css|jpg|jpeg|gif|png|swf)$ {
     if (-f $request_filename) {
      expires      max;
      break;
    }

    if (!-f $request_filename) {
      proxy_pass http://<%=application%>_<%=environment%>_thin_cluster;
      break;
    }
  }

  if (-f $document_root/system/maintenance.html) {
    rewrite  ^(.*)$  /system/maintenance.html last;
    break;
  }

  location ~* \.(eot|ttf|woff)$ {
      add_header Access-Control-Allow-Origin *;
  }

  location / {
    rewrite ^ https://$server_name$request_uri? permanent;
  }
}
<% end -%>

server {
  listen 443 ssl http2;;
  ssl on;
  ssl_certificate /etc/nginx/ssl/kosmogo.crt;
  ssl_certificate_key /etc/nginx/ssl/kosmogo.key;
  server_name <%= fetch(:nginx_server_name) %>;
  root /var/www/<%=environment%>/<%=application%>/current/public;
  try_files $uri/index.html $uri @puma_<%= fetch(:nginx_config_name) %>;

  ssl_session_timeout  5m;
  ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
  ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:RSA+AESGCM:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
  ssl_session_cache shared:TLS:2m;
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 8.8.8.8;
  add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains';
  ssl_dhparam /etc/nginx/ssl/dhparam.pem;
  ssl_prefer_server_ciphers   on;
  access_log /var/www/<%=environment%>/<%=application%>/shared/log/nginx_ssl_access.log;
  error_log /var/www/<%=environment%>/<%=application%>/shared/log/nginx_ssl_error.log;


  location @puma_<%= fetch(:nginx_config_name) %> {
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_redirect off;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
<% if fetch(:nginx_use_ssl) -%>
    proxy_set_header X-Forwarded-Proto https;
<% else -%>
  <% if fetch(:nginx_downstream_uses_ssl) -%>
    proxy_set_header X-Forwarded-Proto https;
  <% else -%>
    proxy_set_header X-Forwarded-Proto http;
  <% end -%>
<% end -%>
    proxy_pass http://puma_<%= fetch(:nginx_config_name) %>;
    # limit_req zone=one;
  }

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  location = /50x.html {
    root html;
  }

  location = /404.html {
    root html;
  }

  location @503 {
    error_page 405 = /system/maintenance.html;
    if (-f $document_root/system/maintenance.html) {
      rewrite ^(.*)$ /system/maintenance.html break;
    }
    rewrite ^(.*)$ /503.html break;
  }

  if ($request_method !~ ^(GET|HEAD|PUT|PATCH|POST|DELETE|OPTIONS)$ ){
    return 405;
  }

  if (-f $document_root/system/maintenance.html) {
    return 503;
  }
}
